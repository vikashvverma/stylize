{"version":3,"sources":["logo.svg","Components/App/App.js","reportWebVitals.js","theme.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","input","display","media","maxWidth","height","Alert","props","elevation","variant","App","classes","React","useState","open","setOpen","uid","setUid","message","setMessage","contentImageName","setContentImageName","contentImage","setContentImage","styleImage","setStyleImage","styleImageName","setStyleImageName","convertedImage","setConvertedImage","intervalTime","handleClose","event","reason","getImage","axios","then","res","data","images","image","uuid","stylised","clearInterval","uploadFile","file","fileName","type","formData","FormData","append","console","log","config","headers","response","setInterval","catch","error","useEffect","Container","className","Paper","src","logo","alt","Typography","component","gutterBottom","accept","id","onChange","e","target","files","name","htmlFor","IconButton","color","aria-label","PhotoCamera","Button","onClick","hidden","Snackbar","autoHideDuration","onClose","severity","Divider","CircularProgress","width","window","location","reload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createMuiTheme","palette","primary","main","light","dark","secondary","red","A400","background","default","overrides","MuiPaper","padding","backgroundColor","MuiButton","ReactDOM","render","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.e9f9a01a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from '../../logo.svg';\nimport '../../App.css';\nimport Container from \"@material-ui/core/Container\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {PhotoCamera} from \"@material-ui/icons\";\nimport {useEffect, useState} from \"react\";\nimport React from 'react';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport * as axios from \"axios\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n        },\n    },\n    input: {\n        display: 'none',\n    },\n    media: {\n        maxWidth: 600,\n        height: 600,\n    }\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n\nfunction App() {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(false);\n    const [uid, setUid] = React.useState('');\n    const [message, setMessage] = React.useState(\"\");\n    const [contentImageName, setContentImageName] = useState(\"\");\n    const [contentImage, setContentImage] = useState({});\n    const [styleImage, setStyleImage] = useState({});\n    const [styleImageName, setStyleImageName] = useState(\"\");\n    const [convertedImage, setConvertedImage] = useState(\"\");\n    let intervalTime = 0;\n    const handleClick = () => {\n        setOpen(true);\n    };\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setOpen(false);\n    };\n\n    const getImage = () => {\n        axios.get('https://etest.programminggeek.in/v1/v1/files').then(res => {\n            if (res && res.data && res.data.data && res.data.data.images) {\n                for (let image of res.data.data.images) {\n                    if (image.uuid == uid && image.stylised) {\n                        setConvertedImage(`https://etest.programminggeek.in/v1/${uid}/stylised-output.png`);\n                        clearInterval(intervalTime);\n                    }\n                }\n            }\n        })\n    }\n    const uploadFile = (file, fileName, type) => {\n        // Create an object of formData\n        const formData = new FormData();\n\n        // Update the formData object\n        formData.append(\n            \"file\",\n            file,\n            fileName\n        );\n\n        // Details of the uploaded file\n        console.log(file);\n        const config = {headers: {'Content-Type': 'multipart/form-data', 'uuid': uid, 'name': fileName, type}};\n        // Request made to the backend api\n        // Send formData object\n        axios.post(\"https://etest.programminggeek.in/v1/v1/upload\", formData, config)\n            .then(function (response) {\n                console.log(response);\n                setUid(response.data.data);\n                if (type == 'style') {\n                    getImage()\n                    intervalTime = setInterval(getImage, 5000);\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    const upload = (event) => {\n        if (!styleImageName || !contentImageName) {\n            setMessage(\"Please select content and style files!\")\n            handleClick();\n            return;\n        }\n        uploadFile(contentImage, contentImageName, 'content')\n    }\n\n    useEffect(() => {\n        if (styleImage && styleImageName) {\n            uploadFile(styleImage, styleImageName, 'style');\n        }\n    }, [uid]);\n\n    return (\n        <Container maxWidth=\"xl\" className=\"App\">\n            <Paper>\n                <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                    Stylize your image\n                </Typography>\n\n                <div className={classes.root}>\n                    <input accept=\"image/*\" className={classes.input} id=\"icon-content-file\" type=\"file\"\n                           onChange={(e) => {\n                               if (e.target && e.target.files && e.target.files[0]) {\n                                   setContentImageName(e.target.files[0].name)\n                                   setContentImage(e.target.files[0])\n                               }\n                           }}/>\n                    <label htmlFor=\"icon-content-file\">\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <PhotoCamera/>\n                        </IconButton>\n\n                        {contentImageName || 'Select Content Image'}\n                    </label>\n                </div>\n\n                <div className={classes.root}>\n                    <input accept=\"image/*\" className={classes.input} id=\"icon-style-file\" type=\"file\"\n                           onChange={(e) => {\n                               if (e.target && e.target.files && e.target.files[0]) {\n                                   setStyleImageName(e.target.files[0].name)\n                                   setStyleImage(e.target.files[0])\n                               }\n                           }}/>\n                    <label htmlFor=\"icon-style-file\">\n                        <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"span\">\n                            <PhotoCamera/>\n                        </IconButton>\n                        {styleImageName || 'Select Style Image'}\n                    </label>\n                </div>\n                {\n                    uid ? '' : <Button variant=\"contained\" color=\"primary\" onClick={upload} hidden={uid}>Upload</Button>\n                }\n                <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n                    <Alert onClose={handleClose} severity=\"success\">\n                        {message}\n                    </Alert>\n                </Snackbar>\n                <Divider/>\n                {uid && !convertedImage ? <CircularProgress color=\"secondary\" hidden/> : ''}\n                {uid && !convertedImage && 'Converting Image'}\n                {convertedImage && <img src={convertedImage} width=\"50%\" alt=\"logo\"/>}\n                {convertedImage && <Button onClick={() => {\n                    window.location.reload();\n                }}>Try again</Button>}\n            </Paper>\n        </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n// A custom theme for this app\nconst theme = createMuiTheme({\n    palette: {\n        type: 'light',\n        primary: {\n            main: '#61dafb',\n            light: '#61dafb',\n            dark: '#21a1c4',\n        },\n        secondary: {\n            main: '#b5ecfb',\n            light: '#61dafb',\n            dark: '#21a1c4',\n        },\n        error: {\n            main: red.A400,\n        },\n        background: {\n            default: '#282c34',\n        },\n    },\n    overrides: {\n        MuiPaper: {\n            root: {\n                padding: '20px 10px',\n                margin: '10px',\n                backgroundColor: '#fff', // 5d737e\n            },\n        },\n        MuiButton: {\n            root: {\n                margin: '5px',\n            },\n        },\n    },\n});\nexport default theme;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {ThemeProvider} from '@material-ui/core/styles';\nimport theme from './theme';\n\nReactDOM.render(\n    <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <App />\n    </ThemeProvider>,\n    document.getElementById('root'),\n);\nreportWebVitals();\n"],"sourceRoot":""}